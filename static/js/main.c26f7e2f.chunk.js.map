{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","components_Card","key","SearchBox","sarchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.c26f7e2f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card  = ({name, email, id}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img  alt ='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    \n    return (\n        <div>\n            {\n            robots.map((user, id) => {\n                return (\n                <Card \n                    key={id} \n                    id ={robots[id].id} \n                    name ={robots[id].name} \n                    email ={robots[id].email}\n                    />\n                );\n            })\n        }\n        </div>\n    );\n}\n\nexport default CardList","import React from 'react';\n\nconst SearchBox = ({sarchfield, searchChange}) => {\n    return (\n        <div className= 'pa2'>\n            <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder ='Search robots' \n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: \"500px\"}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;\n","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState ({ hasError:true })\n    }\n    render () {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots : [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots:users}));\n            }\n// Call up an event use event.target.value to get value of what is typed\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n    render() {\n        const {robots, searchfield} = this.state;\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })  \n        return !robots.length ?\n        <h1 className='tc'>Loading</h1> :\n        (\n            <div className ='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                    <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//As long as we keep this at the top we can use import\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}